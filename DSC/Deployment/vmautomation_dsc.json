{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",

    "parameters": {
        "virtualMachineName": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing VM to apply the DSC configuration to"
            }
        },
        "virtualNetworksName": {
            "type": "string",
            "defaultValue": null,
            "metadata": {
                "description": "The name of the virtual network for the virtual machine."
            }
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": null,
            "minLength": 9,
            "maxLength": 18,
            "metadata": {
                "description": "The IP addresses prefixes for the virtual network. (Eg. 10.1.0.0/16 )"
            }
        },
        "virtualNetworkSubnetName": {
            "type": "string",
            "defaultValue": null,
            "metadata": {
                "description": "The name of the virtual network subnet. (Eg. Subnet-Dev )"
            }
        },
        "virtualNetworkSubnetAddressPrefix": {
            "type": "string",
            "defaultValue": null,
            "minLength": 9,
            "maxLength": 18,
            "metadata": {
                "description": "The IP addresses prefixes for the virtual network. (Eg. 10.1.1.0/24 )"
            }
        },
        "storageAccountsName": {
            "type": "string",
            "defaultValue": null,
            "minLength": 3,
            "maxLength": 24,
            "metadata": {
                "description": "The name of the storage account for storing the virtual machine."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",

                "Standard_D1_v2",
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D6_v2",
                "Standard_D7_v2",
                "Standard_D8_v2",
                "Standard_D9_v2",
                "Standard_D10_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D15_v2",

                "Standard_F1",
                "Standard_F2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F16"
            ],
            "defaultValue": "Standard_D1_v2",
            "metadata": {
                "description": "The size of the virtual machine."
            }
        },
        "virtualMachineDataDiskSize": {
            "type": "int",
            "defaultValue": 40,
            "minValue": 10,
            "maxValue": 1023,
            "metadata": {
                "description": "The GB size of the data disk for the virtual machine."
            }
        },
        "virtualMachineSKU": {
            "type": "string",
            "allowedValues": [
                "2008-R2-SP1",
                "2008-R2-SP1-BYOL",
                "2012-Datacenter",
                "2012-Datacenter-BYOL",
                "2012-R2-Datacenter",
                "2012-R2-Datacenter-BYOL",
                "2016-Datacenter",
                "2016-Datacenter-with-Containers",
                "2016-Nano-Server"
            ],
            "defaultValue": "2012-R2-Datacenter",
            "metadata": {
                "description": "The SKU of the Windows Server virtual machine."
            }
        },
        "virtualMachineNetworkInterfacesName": {
            "type": "string",
            "defaultValue": null,
            "metadata": {
                "description": "The name of the network interface for the virtual machine."
            }
        },
        "virtualMachinePublicIPAddressesName": {
            "type": "string",
            "defaultValue": null,
            "metadata": {
                "description": "The name of the public IP addresses for the virtual machine."
            }
        },
        "virtualMachineAdminUsername": {
            "type": "string",
            "defaultValue": null,
            "metadata": {
                "description": "The administrator username for the virtual machine."
            }
        },
        "virtualMachineAdminPassword": {
            "type": "securestring",
            "defaultValue": null,
            "metadata": {
                "description": "The administrator password for the virtual machine."
            }
        },
        "resourceOwnerNameTag": {
            "type": "string",
            "defaultValue": null,
            "metadata": {
                "description": "The name of the resource owner for the Owner Name tag."
            }
        },
        "businessUnitTag": {
            "type": "string",
            "defaultValue": null,
            "metadata": {
                "description": "The name of the department for the Business Unit tag."
            }
        },
        "costCenterTag": {
            "type": "string",
            "defaultValue": null,
            "metadata": {
                "description": "A cost identifier for the Cost Center tag."
            }
        },
        "environmentTag": {
            "allowedValues": [
                null,
                "Development",
                "Staging",
                "Production"
            ],
            "type": "string",
            "defaultValue": null,
            "metadata": {
                "description": "The name for the Environment tag."
            }
        },
        "maintenanceWindowStartTag": {
            "allowedValues": [
                null,
                "Mon 00:00",
                "Mon 01:00",
                "Mon 02:00",
                "Mon 03:00",
                "Mon 04:00",
                "Mon 05:00",
                "Mon 06:00",
                "Mon 07:00",
                "Mon 08:00",
                "Mon 09:00",
                "Mon 10:00",
                "Mon 11:00",
                "Mon 12:00",
                "Mon 13:00",
                "Mon 14:00",
                "Mon 15:00",
                "Mon 16:00",
                "Mon 17:00",
                "Mon 18:00",
                "Mon 19:00",
                "Mon 20:00",
                "Mon 21:00",
                "Mon 22:00",
                "Mon 23:00",
                "Tue 00:00",
                "Tue 01:00",
                "Tue 02:00",
                "Tue 03:00",
                "Tue 04:00",
                "Tue 05:00",
                "Tue 06:00",
                "Tue 07:00",
                "Tue 08:00",
                "Tue 09:00",
                "Tue 10:00",
                "Tue 11:00",
                "Tue 12:00",
                "Tue 13:00",
                "Tue 14:00",
                "Tue 15:00",
                "Tue 16:00",
                "Tue 17:00",
                "Tue 18:00",
                "Tue 19:00",
                "Tue 20:00",
                "Tue 21:00",
                "Tue 22:00",
                "Tue 23:00",
                "Wed 00:00",
                "Wed 01:00",
                "Wed 02:00",
                "Wed 03:00",
                "Wed 04:00",
                "Wed 05:00",
                "Wed 06:00",
                "Wed 07:00",
                "Wed 08:00",
                "Wed 09:00",
                "Wed 10:00",
                "Wed 11:00",
                "Wed 12:00",
                "Wed 13:00",
                "Wed 14:00",
                "Wed 15:00",
                "Wed 16:00",
                "Wed 17:00",
                "Wed 18:00",
                "Wed 19:00",
                "Wed 20:00",
                "Wed 21:00",
                "Wed 22:00",
                "Wed 23:00",
                "Thu 00:00",
                "Thu 01:00",
                "Thu 02:00",
                "Thu 03:00",
                "Thu 04:00",
                "Thu 05:00",
                "Thu 06:00",
                "Thu 07:00",
                "Thu 08:00",
                "Thu 09:00",
                "Thu 10:00",
                "Thu 11:00",
                "Thu 12:00",
                "Thu 13:00",
                "Thu 14:00",
                "Thu 15:00",
                "Thu 16:00",
                "Thu 17:00",
                "Thu 18:00",
                "Thu 19:00",
                "Thu 20:00",
                "Thu 21:00",
                "Thu 22:00",
                "Thu 23:00",
                "Fri 00:00",
                "Fri 01:00",
                "Fri 02:00",
                "Fri 03:00",
                "Fri 04:00",
                "Fri 05:00",
                "Fri 06:00",
                "Fri 07:00",
                "Fri 08:00",
                "Fri 09:00",
                "Fri 10:00",
                "Fri 11:00",
                "Fri 12:00",
                "Fri 13:00",
                "Fri 14:00",
                "Fri 15:00",
                "Fri 16:00",
                "Fri 17:00",
                "Fri 18:00",
                "Fri 19:00",
                "Fri 20:00",
                "Fri 21:00",
                "Fri 22:00",
                "Fri 23:00",
                "Sat 00:00",
                "Sat 01:00",
                "Sat 02:00",
                "Sat 03:00",
                "Sat 04:00",
                "Sat 05:00",
                "Sat 06:00",
                "Sat 07:00",
                "Sat 08:00",
                "Sat 09:00",
                "Sat 10:00",
                "Sat 11:00",
                "Sat 12:00",
                "Sat 13:00",
                "Sat 14:00",
                "Sat 15:00",
                "Sat 16:00",
                "Sat 17:00",
                "Sat 18:00",
                "Sat 19:00",
                "Sat 20:00",
                "Sat 21:00",
                "Sat 22:00",
                "Sat 23:00",
                "Sun 00:00",
                "Sun 01:00",
                "Sun 02:00",
                "Sun 03:00",
                "Sun 04:00",
                "Sun 05:00",
                "Sun 06:00",
                "Sun 07:00",
                "Sun 08:00",
                "Sun 09:00",
                "Sun 10:00",
                "Sun 11:00",
                "Sun 12:00",
                "Sun 13:00",
                "Sun 14:00",
                "Sun 15:00",
                "Sun 16:00",
                "Sun 17:00",
                "Sun 18:00",
                "Sun 19:00",
                "Sun 20:00",
                "Sun 21:00",
                "Sun 22:00",
                "Sun 23:00"
            ],
            "type": "string",
            "defaultValue": null,
            "metadata": {
                "description": "The start of the maintenance (Mon, Tue, Wed, Thu, Fri, Sat or Sun HH:mm) schedule of the resource for Maintenance Window Start tag."
            }
        },
        "maintenanceWindowEndTag": {
            "allowedValues": [
                null,
                "Mon 00:00",
                "Mon 01:00",
                "Mon 02:00",
                "Mon 03:00",
                "Mon 04:00",
                "Mon 05:00",
                "Mon 06:00",
                "Mon 07:00",
                "Mon 08:00",
                "Mon 09:00",
                "Mon 10:00",
                "Mon 11:00",
                "Mon 12:00",
                "Mon 13:00",
                "Mon 14:00",
                "Mon 15:00",
                "Mon 16:00",
                "Mon 17:00",
                "Mon 18:00",
                "Mon 19:00",
                "Mon 20:00",
                "Mon 21:00",
                "Mon 22:00",
                "Mon 23:00",
                "Tue 00:00",
                "Tue 01:00",
                "Tue 02:00",
                "Tue 03:00",
                "Tue 04:00",
                "Tue 05:00",
                "Tue 06:00",
                "Tue 07:00",
                "Tue 08:00",
                "Tue 09:00",
                "Tue 10:00",
                "Tue 11:00",
                "Tue 12:00",
                "Tue 13:00",
                "Tue 14:00",
                "Tue 15:00",
                "Tue 16:00",
                "Tue 17:00",
                "Tue 18:00",
                "Tue 19:00",
                "Tue 20:00",
                "Tue 21:00",
                "Tue 22:00",
                "Tue 23:00",
                "Wed 00:00",
                "Wed 01:00",
                "Wed 02:00",
                "Wed 03:00",
                "Wed 04:00",
                "Wed 05:00",
                "Wed 06:00",
                "Wed 07:00",
                "Wed 08:00",
                "Wed 09:00",
                "Wed 10:00",
                "Wed 11:00",
                "Wed 12:00",
                "Wed 13:00",
                "Wed 14:00",
                "Wed 15:00",
                "Wed 16:00",
                "Wed 17:00",
                "Wed 18:00",
                "Wed 19:00",
                "Wed 20:00",
                "Wed 21:00",
                "Wed 22:00",
                "Wed 23:00",
                "Thu 00:00",
                "Thu 01:00",
                "Thu 02:00",
                "Thu 03:00",
                "Thu 04:00",
                "Thu 05:00",
                "Thu 06:00",
                "Thu 07:00",
                "Thu 08:00",
                "Thu 09:00",
                "Thu 10:00",
                "Thu 11:00",
                "Thu 12:00",
                "Thu 13:00",
                "Thu 14:00",
                "Thu 15:00",
                "Thu 16:00",
                "Thu 17:00",
                "Thu 18:00",
                "Thu 19:00",
                "Thu 20:00",
                "Thu 21:00",
                "Thu 22:00",
                "Thu 23:00",
                "Fri 00:00",
                "Fri 01:00",
                "Fri 02:00",
                "Fri 03:00",
                "Fri 04:00",
                "Fri 05:00",
                "Fri 06:00",
                "Fri 07:00",
                "Fri 08:00",
                "Fri 09:00",
                "Fri 10:00",
                "Fri 11:00",
                "Fri 12:00",
                "Fri 13:00",
                "Fri 14:00",
                "Fri 15:00",
                "Fri 16:00",
                "Fri 17:00",
                "Fri 18:00",
                "Fri 19:00",
                "Fri 20:00",
                "Fri 21:00",
                "Fri 22:00",
                "Fri 23:00",
                "Sat 00:00",
                "Sat 01:00",
                "Sat 02:00",
                "Sat 03:00",
                "Sat 04:00",
                "Sat 05:00",
                "Sat 06:00",
                "Sat 07:00",
                "Sat 08:00",
                "Sat 09:00",
                "Sat 10:00",
                "Sat 11:00",
                "Sat 12:00",
                "Sat 13:00",
                "Sat 14:00",
                "Sat 15:00",
                "Sat 16:00",
                "Sat 17:00",
                "Sat 18:00",
                "Sat 19:00",
                "Sat 20:00",
                "Sat 21:00",
                "Sat 22:00",
                "Sat 23:00",
                "Sun 00:00",
                "Sun 01:00",
                "Sun 02:00",
                "Sun 03:00",
                "Sun 04:00",
                "Sun 05:00",
                "Sun 06:00",
                "Sun 07:00",
                "Sun 08:00",
                "Sun 09:00",
                "Sun 10:00",
                "Sun 11:00",
                "Sun 12:00",
                "Sun 13:00",
                "Sun 14:00",
                "Sun 15:00",
                "Sun 16:00",
                "Sun 17:00",
                "Sun 18:00",
                "Sun 19:00",
                "Sun 20:00",
                "Sun 21:00",
                "Sun 22:00",
                "Sun 23:00"
            ],
            "type": "string",
            "defaultValue": null,
            "metadata": {
                "description": "The end of the maintenance (Mon, Tue, Wed, Thu, Fri, Sat or Sun HH:mm) schedule of the resource for Maintenance Window End tag."
            }
        },
        "expirationDateTag": {
            "type": "string",
            "defaultValue": "yyyy-MM-dd HH:mm:ss",
            "metadata": {
                "description": "The expiration (yyyy-MM-dd HH:mm:ss) schedule of the resource for Expiration Date tag."
            }
        },
        "modulesUrl": {
            "type": "string",
            "defaultValue": "https://github.com/Azure/azure-quickstart-templates/raw/master/dsc-extension-azure-automation-pullserver/UpdateLCMforAAPull.zip",
            "metadata": {
                "description": "URL for the DSC configuration package. NOTE: Can be a Github url(raw) to the zip file (this is the default value)"
            }
        },
        "configurationFunction": {
            "type": "string",
            "defaultValue": "UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
            "metadata": {
                "description": "DSC configuration function to call. Should contain filename and function in format fileName.ps1\\configurationfunction"
            }
        },
        "registrationKey": {
            "type": "securestring",
            "metadata": {
                "description": "Registration key to use to onboard to the Azure Automation DSC pull/reporting server"
            }
        },
        "registrationUrl": {
            "type": "string",
            "metadata": {
                "description": "Registration url of the Azure Automation DSC pull/reporting server"
            }
        },
        "nodeConfigurationName": {
            "type": "string",
            "metadata": {
                "description": "The name of the node configuration, on the Azure Automation DSC pull server, that this node will be configured as"
            }
        },
        "configurationMode": {
            "type": "string",
            "defaultValue": "ApplyAndMonitor",
            "allowedValues": [
                "ApplyOnly",
                "ApplyAndMonitor",
                "ApplyAndAutoCorrect"
            ],
            "metadata": {
                "description": "DSC agent (LCM) configuration mode setting. ApplyOnly, ApplyAndMonitor, or ApplyAndAutoCorrect"
            }
        },
        "configurationModeFrequencyMins": {
            "type": "int",
            "defaultValue": 15,
            "metadata": {
                "description": "DSC agent (LCM) configuration mode frequency setting, in minutes"
            }
        },
        "refreshFrequencyMins": {
            "type": "int",
            "defaultValue": 30,
            "metadata": {
                "description": "DSC agent (LCM) refresh frequency setting, in minutes"
            }
        },
        "rebootNodeIfNeeded": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "DSC agent (LCM) rebootNodeIfNeeded setting"
            }
        },
        "actionAfterReboot": {
            "type": "string",
            "defaultValue": "ContinueConfiguration",
            "allowedValues": [
                "ContinueConfiguration",
                "StopConfiguration"
            ],
            "metadata": {
                "description": "DSC agent (LCM) actionAfterReboot setting. ContinueConfiguration or StopConfiguration"
            }
        },
        "allowModuleOverwrite": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "DSC agent (LCM) allowModuleOverwrite setting"
            }
        },
        "timestamp": {
            "type": "string",
            "metadata": {
                "description": "The current datetime, as a string, to force the request to go through ARM even if all fields are the same as last ARM deployment of this template; example in parameters file is in MM/dd/yyyy H:mm:ss tt format"
            }
        }
    },
    "variables": {},
    "resources": [
        {
            "comments": "Creates the virtual machine.",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('virtualMachineName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "ResourceOwner": "[parameters('resourceOwnerNameTag')]",
                "BusinessUnit": "[parameters('businessUnitTag')]",
                "CostCenter": "[parameters('costCenterTag')]",
                "Environment": "[parameters('environmentTag')]",
                "MaintenanceWindowStart": "[parameters('maintenanceWindowStartTag')]",
                "MaintenanceWindowEnd": "[parameters('maintenanceWindowEndTag')]",
                "ExpirationDate": "[parameters('expirationDateTag')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('virtualMachineSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "OperatingSystem",
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat('https', '://', parameters('storageAccountsName'), '.blob.core.windows.net', concat('/vhds/', parameters('virtualMachineName'),'_OperatingSystem.vhd'))]"
                        },
                        "caching": "ReadWrite"
                    },
                    "dataDisks": [
                        {
                            "name": "Data",
                            "diskSizeGB": "[parameters('virtualMachineDataDiskSize')]",
                            "lun": 0,
                            "vhd": {
                                "uri": "[concat('https', '://', parameters('storageAccountsName'), '.blob.core.windows.net', concat('/vhds/', parameters('virtualMachineName'),'_Data.vhd'))]"
                            },
                            "createOption": "Empty"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('virtualMachineAdminUsername')]",
                    "adminPassword": "[parameters('virtualMachineAdminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('virtualMachineNetworkInterfacesName'))]"
                        }
                    ]
                }
            },
            "resources": [],
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountsName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('virtualMachineNetworkInterfacesName'))]"
            ]
        },
        {
            "comments": "Creates the network interfaces for the virtual machine.",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('virtualMachineNetworkInterfacesName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "ResourceOwner": "[parameters('resourceOwnerNameTag')]",
                "BusinessUnit": "[parameters('businessUnitTag')]",
                "CostCenter": "[parameters('costCenterTag')]",
                "Environment": "[parameters('environmentTag')]",
                "MaintenanceWindowStart": "[parameters('maintenanceWindowStartTag')]",
                "MaintenanceWindowEnd": "[parameters('maintenanceWindowEndTag')]",
                "ExpirationDate": "[parameters('expirationDateTag')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('virtualMachinePublicIPAddressesName'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworksName')), '/subnets/', parameters('virtualNetworkSubnetName'))]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableIPForwarding": false
            },
            "resources": [],
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('virtualMachinePublicIPAddressesName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworksName'))]"
            ]
        },
        {
            "comments": "Creates the public IP addresses for the virtual machine.",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('virtualMachinePublicIPAddressesName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "ResourceOwner": "[parameters('resourceOwnerNameTag')]",
                "BusinessUnit": "[parameters('businessUnitTag')]",
                "CostCenter": "[parameters('costCenterTag')]",
                "Environment": "[parameters('environmentTag')]",
                "MaintenanceWindowStart": "[parameters('maintenanceWindowStartTag')]",
                "MaintenanceWindowEnd": "[parameters('maintenanceWindowEndTag')]",
                "ExpirationDate": "[parameters('expirationDateTag')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4
            },
            "resources": [],
            "dependsOn": []
        },
        {
            "comments": "Creates the virtual networks for the environment.",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworksName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "ResourceOwner": "[parameters('resourceOwnerNameTag')]",
                "BusinessUnit": "[parameters('businessUnitTag')]",
                "CostCenter": "[parameters('costCenterTag')]",
                "Environment": "[parameters('environmentTag')]",
                "MaintenanceWindowStart": "[parameters('maintenanceWindowStartTag')]",
                "MaintenanceWindowEnd": "[parameters('maintenanceWindowEndTag')]",
                "ExpirationDate": "[parameters('expirationDateTag')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('virtualNetworkSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('virtualNetworkSubnetAddressPrefix')]"
                        }
                    }
                ]
            },
            "resources": [],
            "dependsOn": []
        },
        {
            "comments": "Creates the storage account to store the virtual machine.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccountsName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "ResourceOwner": "[parameters('resourceOwnerNameTag')]",
                "BusinessUnit": "[parameters('businessUnitTag')]",
                "CostCenter": "[parameters('costCenterTag')]",
                "Environment": "[parameters('environmentTag')]",
                "MaintenanceWindowStart": "[parameters('maintenanceWindowStartTag')]",
                "MaintenanceWindowEnd": "[parameters('maintenanceWindowEndTag')]",
                "ExpirationDate": "[parameters('expirationDateTag')]"
            },
            "properties": {},
            "resources": [],
            "dependsOn": []
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('virtualMachineName'),'/Microsoft.Powershell.DSC')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.19",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "Items": {
                        "registrationKeyPrivate": "[parameters('registrationKey')]"
                    }
                },
                "settings": {
                    "modulesUrl": "[parameters('modulesUrl')]",
                    "SasToken": "",
                    "configurationFunction": "[parameters('configurationFunction')]",
                    "Properties": [
                        {
                            "Name": "RegistrationKey",
                            "Value": {
                                "UserName": "PLACEHOLDER_DONOTUSE",
                                "Password": "PrivateSettingsRef:registrationKeyPrivate"
                            },
                            "TypeName": "System.Management.Automation.PSCredential"
                        },
                        {
                            "Name": "RegistrationUrl",
                            "Value": "[parameters('registrationUrl')]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "NodeConfigurationName",
                            "Value": "[parameters('nodeConfigurationName')]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "ConfigurationMode",
                            "Value": "[parameters('configurationMode')]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "ConfigurationModeFrequencyMins",
                            "Value": "[parameters('configurationModeFrequencyMins')]",
                            "TypeName": "System.Int32"
                        },
                        {
                            "Name": "RefreshFrequencyMins",
                            "Value": "[parameters('refreshFrequencyMins')]",
                            "TypeName": "System.Int32"
                        },
                        {
                            "Name": "RebootNodeIfNeeded",
                            "Value": "[parameters('rebootNodeIfNeeded')]",
                            "TypeName": "System.Boolean"
                        },
                        {
                            "Name": "ActionAfterReboot",
                            "Value": "[parameters('actionAfterReboot')]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "AllowModuleOverwrite",
                            "Value": "[parameters('allowModuleOverwrite')]",
                            "TypeName": "System.Boolean"
                        },
                        {
                            "Name": "Timestamp",
                            "Value": "[parameters('timestamp')]",
                            "TypeName": "System.String"
                        }
                    ]
                }
            }
        }
    ]
}
